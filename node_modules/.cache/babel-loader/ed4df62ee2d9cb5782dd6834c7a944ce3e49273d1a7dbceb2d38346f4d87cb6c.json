{"ast":null,"code":"import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\nconst storedItem = localStorage.getItem(\"itemadd\");\nconst item = storedItem ? JSON.parse(storedItem) : [];\n//name\nconst Todo = createSlice({\n  name: \"Add Cart Slice\",\n  initialState: {\n    data: item\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      state.data = [...state.data, action.payload];\n      localStorage.setItem(\"itemadd\", JSON.stringify(state.data));\n    },\n    removeFromCart: (state, action) => {\n      const index = state.data.findIndex(item => item === action.payload);\n      if (index !== -1) {\n        state.data.splice(index, 1);\n      }\n      localStorage.setItem(\"itemadd\", JSON.stringify(state.data));\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart\n} = Todo.actions;\nexport default combineReducers({\n  Todo: Todo.reducer\n});","map":{"version":3,"names":["createSlice","combineReducers","storedItem","localStorage","getItem","item","JSON","parse","Todo","name","initialState","data","reducers","addToCart","state","action","payload","setItem","stringify","removeFromCart","index","findIndex","splice","actions","reducer"],"sources":["E:/Api_integ_task/Api_integration_task/Api_integration_task/src/Store/AddCartSlice.js"],"sourcesContent":["import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst storedItem = localStorage.getItem(\"itemadd\");\r\nconst item = storedItem ? JSON.parse(storedItem) : [];\r\n//name\r\nconst Todo = createSlice({\r\n  name: \"Add Cart Slice\",\r\n  initialState: { data: item },\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      state.data = [...state.data, action.payload];\r\n      localStorage.setItem(\"itemadd\", JSON.stringify(state.data));\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const index = state.data.findIndex((item) => item === action.payload);\r\n      if (index !== -1) {\r\n        state.data.splice(index, 1);\r\n      }\r\n      localStorage.setItem(\"itemadd\", JSON.stringify(state.data));\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart } = Todo.actions;\r\n\r\nexport default combineReducers({\r\n  Todo: Todo.reducer,\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAG/D,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;AAClD,MAAMC,IAAI,GAAGH,UAAU,GAAGI,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,GAAG,EAAE;AACrD;AACA,MAAMM,IAAI,GAAGR,WAAW,CAAC;EACvBS,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAE;IAAEC,IAAI,EAAEN;EAAK,CAAC;EAC5BO,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACH,IAAI,GAAG,CAAC,GAAGG,KAAK,CAACH,IAAI,EAAEI,MAAM,CAACC,OAAO,CAAC;MAC5Cb,YAAY,CAACc,OAAO,CAAC,SAAS,EAAEX,IAAI,CAACY,SAAS,CAACJ,KAAK,CAACH,IAAI,CAAC,CAAC;IAC7D,CAAC;IACDQ,cAAc,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAMK,KAAK,GAAGN,KAAK,CAACH,IAAI,CAACU,SAAS,CAAEhB,IAAI,IAAKA,IAAI,KAAKU,MAAM,CAACC,OAAO,CAAC;MACrE,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBN,KAAK,CAACH,IAAI,CAACW,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC7B;MACAjB,YAAY,CAACc,OAAO,CAAC,SAAS,EAAEX,IAAI,CAACY,SAAS,CAACJ,KAAK,CAACH,IAAI,CAAC,CAAC;IAC7D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,SAAS;EAAEM;AAAe,CAAC,GAAGX,IAAI,CAACe,OAAO;AAEzD,eAAetB,eAAe,CAAC;EAC7BO,IAAI,EAAEA,IAAI,CAACgB;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}